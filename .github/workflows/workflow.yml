name: Workflow
on:
  push:
    branches: [ main ]
    tags:
      - v**
  pull_request: { }

jobs:
  validate-renovate-config:
    uses: BlindfoldedSurgery/renovate-config/.github/workflows/validate.yml@main

  check-commits:
    uses: BlindfoldedSurgery/actions-actions/.github/workflows/commitizen-check.yml@v2

  lint:
    strategy:
      matrix:
        python-version: [ "3.12", "3.11" ]
    uses: BlindfoldedSurgery/actions-python/.github/workflows/lint.yml@v1
    with:
      python-version: ${{ matrix.python-version }}

  test:
    strategy:
      matrix:
        python-version: [ "3.12", "3.11" ]
    uses: BlindfoldedSurgery/actions-python/.github/workflows/test.yml@v1
    with:
      python-version: ${{ matrix.python-version }}
      submit-coverage: ${{ matrix.python-version == '3.11' }}
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-migrations-postgres:
    strategy:
      matrix:
        postgres-version: [ "14", "15", "16" ]
    runs-on: ubuntu-latest
    container: flyway/flyway:10.2
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps:
      - uses: actions/checkout@v4
      - run: flyway migrate -skipCheckForUpdate
        working-directory: migrations
        env:
          FLYWAY_URL: jdbc:postgresql://postgres:5432/postgres
          FLYWAY_USER: postgres
          FLYWAY_PASSWORD: postgres

  test-migrations-sqlite:
    runs-on: ubuntu-latest
    container: flyway/flyway:10.2
    steps:
      - uses: actions/checkout@v4
      - run: flyway migrate -skipCheckForUpdate
        working-directory: migrations

  push-migrations-container-image:
    runs-on: ubuntu-latest
    if: success() && startsWith(github.ref, 'refs/tags/v')
    needs:
      - lint
      - test
      - test-migrations-postgres
      - test-migrations-sqlite
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - uses: actions/checkout@v4
      - name: Install Poetry
        run: pip install poetry==1.7.1
      - name: Use Poetry to read version
        run: |
          VERSION=$(poetry version --short)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./migrations
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG_URL }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG_URL }}-migrations:${{ env.VERSION }}"

  publish-package:
    uses: BlindfoldedSurgery/actions-python/.github/workflows/publish-package.yml@v1
    needs:
      - lint
      - test
      - test-migrations-postgres
      - test-migrations-sqlite
    if: success() && startsWith(github.ref, 'refs/tags/v')
    with:
      python-version: '3.11'
      pypi-username: ${{ vars.PYPI_USERNAME }}
    secrets:
      pypi-password: ${{ secrets.PYPI_PASSWORD }}
