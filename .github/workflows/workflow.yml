name: Workflow
on:
  push:
    branches: [ main ]
    tags:
      - v**
  pull_request: { }

jobs:
  validate-renovate-config:
    uses: BlindfoldedSurgery/renovate-config/.github/workflows/validate.yml@main

  check-commits:
    uses: BlindfoldedSurgery/actions-releases/.github/workflows/commitizen-check.yml@v2

  lint:
    strategy:
      matrix:
        python-version: [ "3.12", "3.11" ]
    uses: BlindfoldedSurgery/actions-python/.github/workflows/lint.yml@v1
    with:
      python-version: ${{ matrix.python-version }}

  test:
    strategy:
      matrix:
        python-version: [ "3.12", "3.11" ]
    uses: BlindfoldedSurgery/actions-python/.github/workflows/test.yml@v1
    with:
      python-version: ${{ matrix.python-version }}
      submit-coverage: ${{ matrix.python-version == '3.11' }}
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-migrations-postgres:
    strategy:
      matrix:
        postgres-version: [ "14", "15", "16" ]
    runs-on: ubuntu-latest
    container: flyway/flyway:10.9
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps:
      - uses: actions/checkout@v4
      - run: flyway migrate -skipCheckForUpdate
        working-directory: migrations
        env:
          FLYWAY_URL: jdbc:postgresql://postgres:5432/postgres
          FLYWAY_USER: postgres
          FLYWAY_PASSWORD: postgres

  test-migrations-sqlite:
    runs-on: ubuntu-latest
    container: flyway/flyway:10.9
    steps:
      - uses: actions/checkout@v4
      - run: flyway migrate -skipCheckForUpdate
        working-directory: migrations

  extract-version:
    runs-on: ubuntu-latest
    if: success() && startsWith(github.ref, 'refs/tags/v')
    outputs:
      version: ${{ steps.extract.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Poetry
        run: pip install poetry==1.8.3
      - name: Use Poetry to read version
        id: extract
        run: |
          VERSION=$(poetry version --short)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

  build-migrations-container-image:
    if: success() && startsWith(github.ref, 'refs/tags/v')
    needs:
      - extract-version
      - lint
      - test
      - test-migrations-postgres
      - test-migrations-sqlite
    strategy:
      matrix:
        platform: ["arm64", "amd64"]
    uses: BlindfoldedSurgery/actions-container/.github/workflows/build-image-docker.yml@v3
    with:
      context: '{{defaultContext}}:migrations'
      digest-artifact-name: digests
      platform: "linux/${{ matrix.platform }}"
      push-image: true
      image-name: rate-limiter-migrations
      version: ${{ needs.extract-version.outputs.version }}
      tag-suffix: -${{ matrix.platform }}

  merge-migrations-container-image:
    if: success() && startsWith(github.ref, 'refs/tags/v')
    needs:
      - extract-version
      - build-migrations-container-image
    uses: BlindfoldedSurgery/actions-container/.github/workflows/merge-manifests.yml@v3
    with:
      image-name: rate-limiter-migrations
      tag: ${{ needs.extract-version.outputs.version }}
      variant-digests: digests

  publish-package:
    uses: BlindfoldedSurgery/actions-python/.github/workflows/publish-package.yml@v1
    needs:
      - lint
      - test
      - test-migrations-postgres
      - test-migrations-sqlite
    if: success() && startsWith(github.ref, 'refs/tags/v')
    with:
      python-version: '3.11'
      pypi-username: ${{ vars.PYPI_USERNAME }}
    secrets:
      pypi-password: ${{ secrets.PYPI_PASSWORD }}
