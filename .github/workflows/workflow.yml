name: Workflow
on:
  push:
    branches: [ main ]
    tags:
      - v**
  pull_request: { }

env:
  COVERAGE_VERSION: "3.11"

jobs:
  lint:
    strategy:
      matrix:
        pyversion: [ "3.11", "3.10" ]
    container: python:${{ matrix.pyversion }}-slim
    runs-on: ubuntu-latest
    steps:
      - name: Install Poetry
        run: pip install poetry==1.6.1
      - uses: actions/checkout@v4
      - run: poetry install
      - name: Check coding standards
        run: |
          poetry run ruff check src/
          poetry run black --check src/
          poetry run mypy src/

  test:
    strategy:
      matrix:
        pyversion: [ "3.11", "3.10" ]
    container: python:${{ matrix.pyversion }}-slim
    runs-on: ubuntu-latest
    steps:
      - name: Install Poetry
        run: pip install poetry==1.6.1
      - uses: actions/checkout@v4
      - run: poetry install
      - name: Run tests
        run: |
          if [ "${{ matrix.pyversion }}" = "${{ env.COVERAGE_VERSION }}" ]
          then
            poetry run pytest --cov src/
          else
            poetry run pytest src/
          fi
      - name: Convert Python coverage file format to XML
        if: matrix.pyversion == env.COVERAGE_VERSION
        run: poetry run coverage xml
      - name: Upload coverage reports to Codecov
        if: matrix.pyversion == env.COVERAGE_VERSION
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml

  push-migrations-container-image:
    runs-on: ubuntu-latest
    if: success() && startsWith(github.ref, 'refs/tags/v')
    needs:
      - lint
      - test
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - uses: actions/checkout@v4
      - name: Install Poetry
        run: pip install poetry==1.6.1
      - name: Use Poetry to read version
        run: |
          VERSION=$(poetry version --short)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./migrations
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG_URL }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG_URL }}-migrations:${{ env.VERSION }}"

  publish_package:
    runs-on: ubuntu-latest
    container: python:3.10-slim
    needs:
      - lint
      - test
    if: success() && startsWith(github.ref, 'refs/tags/v')
    env:
      POETRY_HTTP_BASIC_PYPI_BS_USERNAME: ${{ vars.PYPI_USERNAME }}
      POETRY_HTTP_BASIC_PYPI_BS_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    steps:
      - name: Install Poetry
        run: pip install poetry==1.6.1
      - uses: actions/checkout@v4
      - run: poetry install
      - name: Build project
        run: poetry build
      - name: Upload to pypi registry
        run: poetry publish -r pypi-bs
